<?phprequire_once Mage::getBaseDir('lib')."/Fastcash/Fastcash.php";class Miziagui_Fastcash_Model_Methods_Payment extends Mage_Payment_Model_Method_Abstract {    const PAYMENT_TYPE_AUTH = 'AUTHORIZATION';    const PAYMENT_TYPE_SALE = 'SALE';    protected $_code = 'fastcash_payment';    protected $_formBlockType = 'fastcash/form_payment';    protected $_infoBlockType = 'fastcash/info_payment';    protected $_allowCurrencyCode = array('BRL', 'USD');    protected $_confirmation = '';      protected $_confirm = array();        /**     * Assign data to info model instance     *     * @param   mixed $data     * @return  Mage_Payment_Model_Info     *///    public function assignData($data) {//        if (!($data instanceof Varien_Object)) {//            $data = new Varien_Object($data);//        }////        //$info = $this->getInfoInstance();//        //$info->setFastcashTransferenciaType($data->getFastcashTransferenciaType());        //        return $this;//    }    /**     * Using internal pages for input payment data     *     * @return bool     */    public function canUseInternal() {        return false;    }//    public function getConfig() {//        return new Varien_Object(Mage::getStoreConfig('payment/fastcash_payment'));//    }    public function prepareAuth($order) {            try {            /**            * Create order in fastcash table            */            $fastcash = Mage::getModel('fastcash/order');            $fastcash->setOrderId($order->getId());            $fastcash->setCustomerId($order->getCustomerId());                    $fastcash->setTransactionId($order->getIncrementId());        //uniqid('', true)            $fastcash->setStatus(Miziagui_Fastcash_Model_Order::STATUS_CREATED);            $fastcash->setCreatedAt(Mage::getModel('core/date')->date("Y-m-d H:i:s"));            $fastcash->setType('frame');            $fastcash->save();                    } catch (Exception $e) {            Mage::log('Erro: Fastcash Tranferencia - Metodo: prepareAuth - Pedido: '.$order->getId().' - Erro: '.$e->getMessage(),null,'fastcash_error.log');            exit;        }                        return $this;            }        public function getOrderPlaceRedirectUrl()    {        return Mage::getUrl('fastcash/checkout/success', array('_secure' => true));    }            /**     * Authorize     *     * @param   Varien_Object $orderPayment     * @param float $amount     * @return  Mage_Payment_Model_Abstract     */    public function authorize(Varien_Object $payment, $amount) {                $order = $payment->getOrder();                    	$this->prepareAuth($order);        return $this;    }        /**     * Capture     *     * @param   Varien_Object $orderPayment     * @param float $amount     * @return  Mage_Payment_Model_Abstract     */    public function capture(Varien_Object $payment, $amount) {        return $this;                    }    public function prepareCapture($order,$confirm){         }     /**     * Using for multiple shipping address     *     * @return bool     */    public function canUseForMultishipping() {        return false;    }    /**     *  check if capture is available     *      * @return bool     */    public function canCapture() {        return true;    }    /**     * Using for multiple shipping address     *     */    public function createFormBlock($name) {        $block = $this->getLayout()->createBlock($this->_formBlockType, $name)                ->setMethod('fastcash_payment')                ->setPayment($this->getPayment())                ->setTemplate('fastcash/form/payment.phtml');        return $block;    }    /**     * Get Fastcash session namespace     *     * @return Miziagui_Fastcash_Model_Session     */    public function getSession() {        return Mage::getSingleton('fastcash/session');    }    /**     * Get checkout session namespace     *     * @return Mage_Checkout_Model_Session     */    public function getCheckout() {        return Mage::getSingleton('checkout/session');    }    /**     * Get current quote     *     * @return Mage_Sales_Model_Quote     */    public function getQuote() {        return $this->getCheckout()->getQuote();    }    /**     * Some process when invoice is created     *      * @param Mage_Sales_Model_Invoice_Payment $payment     * @return Indexa_Gwap_Model_Methods_boleto     */    public function onInvoiceCreate(Mage_Sales_Model_Invoice_Payment $payment) {        return $this;    }    /**     * Some process when order is validated     *      * @param Mage_Sales_Model_Invoice_Payment $payment     * @return Indexa_Gwap_Model_Methods_boleto     */    public function onOrderValidate(Mage_Sales_Model_Order_Payment $payment) {        return $this;    }    /*     * Validate     */    public function validate() {        parent::validate();    }        /**     *     * @param Mage_Sales_Model_Quote|null $quote     * @return bool     */    public function isAvailable($quote = null)    {        if (is_null($quote)) {            return false;        }        if (!Mage::getStoreConfig('fastcash/fastcash_payment/active')) {            return false;        }                $methods = explode(",",Mage::getStoreConfig('fastcash/fastcash_payment/methods'));        if(!sizeof($methods)){            return false;        }                return true;    }            }